plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'SpringBoot.Project'
version = '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    // üåê Core Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // üîê Security & Auth
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // üõ¢Ô∏è Database (JPA + H2 or MySQL)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java:8.0.33'

    // ‚öôÔ∏è Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // üßæ JSON Web Token (JWT)
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    // üß∞ Utilities (optional)
    implementation 'com.google.guava:guava:32.1.2-jre' // Only if needed

    // üîÅ Object Mapping (optional)
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // üß¨ Spring Cloud (optional: for config server)
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.1.1'

    // üìù Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    //    Environment Variable
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    //    mySQL connection
    implementation 'mysql:mysql-connector-java:8.0.33'

//    kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // ‚úÖ Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'authService.Main'
}
